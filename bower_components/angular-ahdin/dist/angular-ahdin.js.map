{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d00f4c2f4e30fa154760","webpack:///./angular-ahdin.js","webpack:///external \"angular\"","webpack:///external {\"amd\":\"blob-util\",\"commonjs\":\"blob-util\",\"commonjs2\":\"blob-util\",\"root\":\"blobUtil\"}","webpack:///external {\"amd\":\"blueimp-load-image/js/load-image.all.min\",\"commonjs\":\"blueimp-load-image/js/load-image.all.min\",\"commonjs2\":\"blueimp-load-image/js/load-image.all.min\",\"root\":\"loadImage\"}"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7HA,gD;;;;;;ACAA,gD;;;;;;ACAA,gD","file":"angular-ahdin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"blob-util\"), require(\"blueimp-load-image/js/load-image.all.min\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"blob-util\", \"blueimp-load-image/js/load-image.all.min\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ahdin\"] = factory(require(\"angular\"), require(\"blob-util\"), require(\"blueimp-load-image/js/load-image.all.min\"));\n\telse\n\t\troot[\"ahdin\"] = factory(root[\"angular\"], root[\"blobUtil\"], root[\"loadImage\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d00f4c2f4e30fa154760\n **/","'use strict';\n\nvar angular = require('angular');\nvar blobUtil = require('blob-util');\nvar loadImage = require('blueimp-load-image/js/load-image.all.min');\n\nmodule.exports = angular\n  .module('ahdin', [])\n  .factory('Ahdin', imageCompressor);\n\nfunction imageCompressor($q, $window, $rootScope) {\n  var VALID_FORMATS = ['jpeg', 'png'];\n  var DEFAULT_QUALITY = 0.8;\n\n  return {\n    compress: compress\n  };\n\n  function compress(params) {\n    validateParams(params);\n\n    params.quality = params.quality || DEFAULT_QUALITY;\n    params.outputFormat = params.outputFormat || 'jpeg';\n\n    var deferred = $q.defer();\n    scaleAndFixOrientation(canvasToBlobAndResolve);\n    return deferred.promise;\n\n    function scaleAndFixOrientation(callback) {\n      getLoadImageOptions(function(options) {\n        loadImage(params.sourceFile, callback, options);\n      });\n    }\n\n    function getLoadImageOptions(callback) {\n      loadImage.parseMetaData(params.sourceFile, function(metaData) {\n        var options = {\n          canvas: true,\n          maxWidth: params.maxWidth,\n          maxHeight: params.maxHeight\n        };\n\n        if (metaData.exif) {\n          options.orientation = metaData.exif.get('Orientation');\n        }\n\n        callback(options);\n      });\n    }\n\n    function canvasToBlobAndResolve(canvas) {\n      canvasToBlob(canvas, applyAndResolve);\n    }\n\n    function canvasToBlob(canvas, callback) {\n      var mimeType = 'image/' + params.outputFormat;\n      var dataUrl = canvas.toDataURL(mimeType, params.quality);\n      blobUtil.dataURLToBlob(dataUrl).then(addFileName).then(callback);\n    }\n\n    function addFileName(blob) {\n      blob.name = params.sourceFile.name;\n      return blob;\n    }\n\n    function applyAndResolve(blob) {\n      $rootScope.$apply(resolve);\n\n      function resolve() {\n        deferred.resolve(blob);\n      }\n    }\n  }\n\n  function isPositiveNumber(value) {\n    return angular.isNumber(value) && value > 0;\n  }\n\n  function validateParams(params) {\n    params = params || {};\n    validateSourceFile(params.sourceFile);\n    validateMaxWidth(params.maxWidth);\n    validateMaxHeight(params.maxHeight);\n    validateOutputFormat(params.outputFormat);\n    validateQuality(params.quality);\n  }\n\n  function validateSourceFile(sourceFile) {\n    var sourceImageValid =\n      (sourceFile instanceof $window.File  || sourceFile instanceof $window.Blob);\n    if (!sourceImageValid) {\n      throw new Error('params.sourceFile must be instance of File');\n    }\n  }\n\n  function validateMaxWidth(maxWidth)  {\n    var isMaxWidthValid = maxWidth === undefined || isPositiveNumber(maxWidth);\n    if (!isMaxWidthValid) {\n      throw new Error('params.maxWidth must be a positive Number');\n    }\n  }\n\n  function validateMaxHeight(maxHeight) {\n    var isMaxHeightValid = maxHeight === undefined || isPositiveNumber(maxHeight);\n    if (!isMaxHeightValid) {\n      throw new Error('params.maxHeight must be a positive Number');\n    }\n  }\n\n  function validateOutputFormat(outputFormat) {\n    var isInValidFormats = VALID_FORMATS.indexOf(outputFormat) > -1;\n    var outputFormatValid = outputFormat ? isInValidFormats : true;\n    if (!outputFormatValid) {\n      throw new Error('params.outputFormat format must be one of [' + VALID_FORMATS + ']');\n    }\n  }\n\n  function validateQuality(quality)  {\n    var isQualityValid = quality === undefined || quality > 0 && quality <= 1;\n    if (!isQualityValid) {\n      throw new Error('params.quality must be a Number over 0 and less or equal to 1');\n    }\n  }\n}\n\nimageCompressor.$inject = ['$q', '$window', '$rootScope'];\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./angular-ahdin.js\n ** module id = 0\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"blob-util\",\"commonjs\":\"blob-util\",\"commonjs2\":\"blob-util\",\"root\":\"blobUtil\"}\n ** module id = 2\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"blueimp-load-image/js/load-image.all.min\",\"commonjs\":\"blueimp-load-image/js/load-image.all.min\",\"commonjs2\":\"blueimp-load-image/js/load-image.all.min\",\"root\":\"loadImage\"}\n ** module id = 3\n ** module chunks = 0 1\n **/"],"sourceRoot":""}
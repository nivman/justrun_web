{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-ahdin.min.js","webpack:///webpack/bootstrap d00f4c2f4e30fa154760?9eb9","webpack:///./angular-ahdin.js?bf37","webpack:///external \"angular\"?11d2","webpack:///external {\"amd\":\"blob-util\",\"commonjs\":\"blob-util\",\"commonjs2\":\"blob-util\",\"root\":\"blobUtil\"}?7506","webpack:///external {\"amd\":\"blueimp-load-image/js/load-image.all.min\",\"commonjs\":\"blueimp-load-image/js/load-image.all.min\",\"commonjs2\":\"blueimp-load-image/js/load-image.all.min\",\"root\":\"loadImage\"}?bd3c"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","imageCompressor","$q","$window","$rootScope","compress","params","scaleAndFixOrientation","callback","getLoadImageOptions","options","loadImage","sourceFile","parseMetaData","metaData","canvas","maxWidth","maxHeight","exif","orientation","get","canvasToBlobAndResolve","canvasToBlob","applyAndResolve","mimeType","outputFormat","dataUrl","toDataURL","quality","blobUtil","dataURLToBlob","then","addFileName","blob","name","resolve","deferred","$apply","validateParams","DEFAULT_QUALITY","defer","promise","isPositiveNumber","value","angular","isNumber","validateSourceFile","validateMaxWidth","validateMaxHeight","validateOutputFormat","validateQuality","sourceImageValid","File","Blob","Error","isMaxWidthValid","undefined","isMaxHeightValid","isInValidFormats","VALID_FORMATS","indexOf","outputFormatValid","isQualityValid","$inject"],"mappings":"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","file":"angular-ahdin.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"blob-util\"), require(\"blueimp-load-image/js/load-image.all.min\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"blob-util\", \"blueimp-load-image/js/load-image.all.min\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ahdin\"] = factory(require(\"angular\"), require(\"blob-util\"), require(\"blueimp-load-image/js/load-image.all.min\"));\n\telse\n\t\troot[\"ahdin\"] = factory(root[\"angular\"], root[\"blobUtil\"], root[\"loadImage\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"blob-util\"), require(\"blueimp-load-image/js/load-image.all.min\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"blob-util\", \"blueimp-load-image/js/load-image.all.min\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ahdin\"] = factory(require(\"angular\"), require(\"blob-util\"), require(\"blueimp-load-image/js/load-image.all.min\"));\n\telse\n\t\troot[\"ahdin\"] = factory(root[\"angular\"], root[\"blobUtil\"], root[\"loadImage\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(1);\n\tvar blobUtil = __webpack_require__(2);\n\tvar loadImage = __webpack_require__(3);\n\t\n\tmodule.exports = angular\n\t  .module('ahdin', [])\n\t  .factory('Ahdin', imageCompressor);\n\t\n\tfunction imageCompressor($q, $window, $rootScope) {\n\t  var VALID_FORMATS = ['jpeg', 'png'];\n\t  var DEFAULT_QUALITY = 0.8;\n\t\n\t  return {\n\t    compress: compress\n\t  };\n\t\n\t  function compress(params) {\n\t    validateParams(params);\n\t\n\t    params.quality = params.quality || DEFAULT_QUALITY;\n\t    params.outputFormat = params.outputFormat || 'jpeg';\n\t\n\t    var deferred = $q.defer();\n\t    scaleAndFixOrientation(canvasToBlobAndResolve);\n\t    return deferred.promise;\n\t\n\t    function scaleAndFixOrientation(callback) {\n\t      getLoadImageOptions(function(options) {\n\t        loadImage(params.sourceFile, callback, options);\n\t      });\n\t    }\n\t\n\t    function getLoadImageOptions(callback) {\n\t      loadImage.parseMetaData(params.sourceFile, function(metaData) {\n\t        var options = {\n\t          canvas: true,\n\t          maxWidth: params.maxWidth,\n\t          maxHeight: params.maxHeight\n\t        };\n\t\n\t        if (metaData.exif) {\n\t          options.orientation = metaData.exif.get('Orientation');\n\t        }\n\t\n\t        callback(options);\n\t      });\n\t    }\n\t\n\t    function canvasToBlobAndResolve(canvas) {\n\t      canvasToBlob(canvas, applyAndResolve);\n\t    }\n\t\n\t    function canvasToBlob(canvas, callback) {\n\t      var mimeType = 'image/' + params.outputFormat;\n\t      var dataUrl = canvas.toDataURL(mimeType, params.quality);\n\t      blobUtil.dataURLToBlob(dataUrl).then(addFileName).then(callback);\n\t    }\n\t\n\t    function addFileName(blob) {\n\t      blob.name = params.sourceFile.name;\n\t      return blob;\n\t    }\n\t\n\t    function applyAndResolve(blob) {\n\t      $rootScope.$apply(resolve);\n\t\n\t      function resolve() {\n\t        deferred.resolve(blob);\n\t      }\n\t    }\n\t  }\n\t\n\t  function isPositiveNumber(value) {\n\t    return angular.isNumber(value) && value > 0;\n\t  }\n\t\n\t  function validateParams(params) {\n\t    params = params || {};\n\t    validateSourceFile(params.sourceFile);\n\t    validateMaxWidth(params.maxWidth);\n\t    validateMaxHeight(params.maxHeight);\n\t    validateOutputFormat(params.outputFormat);\n\t    validateQuality(params.quality);\n\t  }\n\t\n\t  function validateSourceFile(sourceFile) {\n\t    var sourceImageValid =\n\t      (sourceFile instanceof $window.File  || sourceFile instanceof $window.Blob);\n\t    if (!sourceImageValid) {\n\t      throw new Error('params.sourceFile must be instance of File');\n\t    }\n\t  }\n\t\n\t  function validateMaxWidth(maxWidth)  {\n\t    var isMaxWidthValid = maxWidth === undefined || isPositiveNumber(maxWidth);\n\t    if (!isMaxWidthValid) {\n\t      throw new Error('params.maxWidth must be a positive Number');\n\t    }\n\t  }\n\t\n\t  function validateMaxHeight(maxHeight) {\n\t    var isMaxHeightValid = maxHeight === undefined || isPositiveNumber(maxHeight);\n\t    if (!isMaxHeightValid) {\n\t      throw new Error('params.maxHeight must be a positive Number');\n\t    }\n\t  }\n\t\n\t  function validateOutputFormat(outputFormat) {\n\t    var isInValidFormats = VALID_FORMATS.indexOf(outputFormat) > -1;\n\t    var outputFormatValid = outputFormat ? isInValidFormats : true;\n\t    if (!outputFormatValid) {\n\t      throw new Error('params.outputFormat format must be one of [' + VALID_FORMATS + ']');\n\t    }\n\t  }\n\t\n\t  function validateQuality(quality)  {\n\t    var isQualityValid = quality === undefined || quality > 0 && quality <= 1;\n\t    if (!isQualityValid) {\n\t      throw new Error('params.quality must be a Number over 0 and less or equal to 1');\n\t    }\n\t  }\n\t}\n\t\n\timageCompressor.$inject = ['$q', '$window', '$rootScope'];\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-ahdin.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d00f4c2f4e30fa154760\n **/","'use strict';\n\nvar angular = require('angular');\nvar blobUtil = require('blob-util');\nvar loadImage = require('blueimp-load-image/js/load-image.all.min');\n\nmodule.exports = angular\n  .module('ahdin', [])\n  .factory('Ahdin', imageCompressor);\n\nfunction imageCompressor($q, $window, $rootScope) {\n  var VALID_FORMATS = ['jpeg', 'png'];\n  var DEFAULT_QUALITY = 0.8;\n\n  return {\n    compress: compress\n  };\n\n  function compress(params) {\n    validateParams(params);\n\n    params.quality = params.quality || DEFAULT_QUALITY;\n    params.outputFormat = params.outputFormat || 'jpeg';\n\n    var deferred = $q.defer();\n    scaleAndFixOrientation(canvasToBlobAndResolve);\n    return deferred.promise;\n\n    function scaleAndFixOrientation(callback) {\n      getLoadImageOptions(function(options) {\n        loadImage(params.sourceFile, callback, options);\n      });\n    }\n\n    function getLoadImageOptions(callback) {\n      loadImage.parseMetaData(params.sourceFile, function(metaData) {\n        var options = {\n          canvas: true,\n          maxWidth: params.maxWidth,\n          maxHeight: params.maxHeight\n        };\n\n        if (metaData.exif) {\n          options.orientation = metaData.exif.get('Orientation');\n        }\n\n        callback(options);\n      });\n    }\n\n    function canvasToBlobAndResolve(canvas) {\n      canvasToBlob(canvas, applyAndResolve);\n    }\n\n    function canvasToBlob(canvas, callback) {\n      var mimeType = 'image/' + params.outputFormat;\n      var dataUrl = canvas.toDataURL(mimeType, params.quality);\n      blobUtil.dataURLToBlob(dataUrl).then(addFileName).then(callback);\n    }\n\n    function addFileName(blob) {\n      blob.name = params.sourceFile.name;\n      return blob;\n    }\n\n    function applyAndResolve(blob) {\n      $rootScope.$apply(resolve);\n\n      function resolve() {\n        deferred.resolve(blob);\n      }\n    }\n  }\n\n  function isPositiveNumber(value) {\n    return angular.isNumber(value) && value > 0;\n  }\n\n  function validateParams(params) {\n    params = params || {};\n    validateSourceFile(params.sourceFile);\n    validateMaxWidth(params.maxWidth);\n    validateMaxHeight(params.maxHeight);\n    validateOutputFormat(params.outputFormat);\n    validateQuality(params.quality);\n  }\n\n  function validateSourceFile(sourceFile) {\n    var sourceImageValid =\n      (sourceFile instanceof $window.File  || sourceFile instanceof $window.Blob);\n    if (!sourceImageValid) {\n      throw new Error('params.sourceFile must be instance of File');\n    }\n  }\n\n  function validateMaxWidth(maxWidth)  {\n    var isMaxWidthValid = maxWidth === undefined || isPositiveNumber(maxWidth);\n    if (!isMaxWidthValid) {\n      throw new Error('params.maxWidth must be a positive Number');\n    }\n  }\n\n  function validateMaxHeight(maxHeight) {\n    var isMaxHeightValid = maxHeight === undefined || isPositiveNumber(maxHeight);\n    if (!isMaxHeightValid) {\n      throw new Error('params.maxHeight must be a positive Number');\n    }\n  }\n\n  function validateOutputFormat(outputFormat) {\n    var isInValidFormats = VALID_FORMATS.indexOf(outputFormat) > -1;\n    var outputFormatValid = outputFormat ? isInValidFormats : true;\n    if (!outputFormatValid) {\n      throw new Error('params.outputFormat format must be one of [' + VALID_FORMATS + ']');\n    }\n  }\n\n  function validateQuality(quality)  {\n    var isQualityValid = quality === undefined || quality > 0 && quality <= 1;\n    if (!isQualityValid) {\n      throw new Error('params.quality must be a Number over 0 and less or equal to 1');\n    }\n  }\n}\n\nimageCompressor.$inject = ['$q', '$window', '$rootScope'];\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./angular-ahdin.js\n ** module id = 0\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"blob-util\",\"commonjs\":\"blob-util\",\"commonjs2\":\"blob-util\",\"root\":\"blobUtil\"}\n ** module id = 2\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"blueimp-load-image/js/load-image.all.min\",\"commonjs\":\"blueimp-load-image/js/load-image.all.min\",\"commonjs2\":\"blueimp-load-image/js/load-image.all.min\",\"root\":\"loadImage\"}\n ** module id = 3\n ** module chunks = 0 1\n **/"],"sourceRoot":""}